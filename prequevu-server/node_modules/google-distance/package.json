{
  "name": "google-distance",
  "version": "0.0.7",
  "main": "index",
  "description": "A simple node.js wrapper for Google's Distance Matrix API",
  "author": {
    "name": "Edward Look",
    "email": "edwlook@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/edwlook/node-google-distance.git"
  },
  "keywords": [
    "google",
    "maps",
    "distance",
    "matrix",
    "api"
  ],
  "readme": "# Google Distance Matrix API for Node.js\r\nEasily get traveling distance and duration info between locations with [Google Distance Matrix API](https://developers.google.com/maps/documentation/distancematrix/)\r\n\r\nFirst node module, please give feedback and suggestions :)\r\n\r\n## Installation\r\n\r\n\tnpm install google-distance\r\n\r\n## Usage\r\n\r\n\tvar distance = require('google-distance');\r\n\r\n\tdistance.get(\r\n\t\t{\t\r\n\t\t\torigin: 'San Francisco, CA', \r\n\t\t\tdestination: 'San Diego, CA'\r\n\t\t}, \r\n\t\tfunction(err, data) { \r\n\t\t\tif (err) {\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconsole.log(data);\r\n\t\t\t//your custom logic...\r\n\t});\r\n\r\nThe above example outputs the following `data` object:\r\n\r\n\t{ \r\n\t\tindex: null,\r\n\t\tdistance: '502 mi',\r\n\t\tduration: '7 hours 48 mins',\r\n\t\torigin: 'San Francisco, CA, USA',\r\n\t\tdestination: 'San Diego, CA, USA',\r\n\t\tmode: 'driving',\r\n\t\tunits: 'imperial',\r\n\t\tlanguage: 'en',\r\n\t\tavoid: null,\r\n\t\tsensor: false \r\n\t}\r\n\r\n## Additional Parameters\r\nIn addition to 'origin' and 'destination,' you may include these options to tailor your query:\r\n\r\n\t{\r\n\t\tindex: null(default),\r\n\t\tmode: driving(default) | walking | bicycling,\r\n\t\tunits: imperial(default) | metric, //imperial returns distances in miles/feet. metric in kilometers/meters.\r\n\t\tlanguage: en(default),\r\n\t\tavoid: null(default) | highways | tolls,\r\n\t\tsensor: false(default) | true //determines if a sensor (such as GPS) is used to determine user location.\r\n\t}\r\n\r\n## More Examples\r\nThis one uses more options:\r\n\r\n\tvar distance = require('google-distance');\r\n\r\n\tdistance.get(\r\n\t\t{\t\r\n\t\t\torigin: 'San Francisco, CA', \r\n\t\t\tdestination: 'Los Angeles, CA',\r\n\t\t\tmode: 'bicycling',\r\n\t\t\tunits: 'metric'\r\n\t\t}, \r\n\t\tfunction(err, data) { \r\n\t\t\tif (err) {\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconsole.log(data);\r\n\t\t\t//your custom logic...\r\n\t});\r\n\r\nOutputs:\r\n\r\n\t{ \r\n\t\tindex: null,\r\n\t\tdistance: '800 km',\r\n\t\tduration: '1 day 21 hours',\r\n\t\torigin: 'San Francisco, CA, USA',\r\n\t\tdestination: 'Los Angeles, CA, USA',\r\n\t\tmode: 'bicycling',\r\n\t\tunits: 'metric',\r\n\t\tlanguage: 'en',\r\n\t\tavoid: null,\r\n\t\tsensor: false \r\n\t}\r\n\r\nLet's use latitude and longitude and an index:\r\n\t\r\n\tdistance.get(\r\n\t{\t\r\n\t\tindex: 1,\r\n\t\torigin: '37.772886,-122.423771', \r\n\t\tdestination: '37.871601,-122.269104'\r\n\t}, \r\n\tfunction(err, data) {\r\n\t\tif (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconsole.log(data);\r\n\t\t//your custom logic...\r\n\t});\r\n\r\nOutputs:\r\n\r\n\t{ \r\n\t\tindex: 1,\r\n\t\tdistance: '13.6 mi',\r\n\t\tduration: '20 mins',\r\n\t\torigin: 'Octavia Boulevard, San Francisco, CA 94102, USA',\r\n\t\tdestination: '2066-2070 University Avenue, Berkeley, CA 94704, USA',\r\n\t\tmode: 'driving',\r\n\t\tunits: 'imperial',\r\n\t\tlanguage: 'en',\r\n\t\tavoid: null,\r\n\t\tsensor: false \r\n\t}",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/edwlook/node-google-distance/issues"
  },
  "homepage": "https://github.com/edwlook/node-google-distance",
  "_id": "google-distance@0.0.7",
  "dist": {
    "shasum": "707b5c5c32bc33951c6e2bca9c0d6563454707b4"
  },
  "_from": "google-distance@",
  "_resolved": "https://registry.npmjs.org/google-distance/-/google-distance-0.0.7.tgz"
}
